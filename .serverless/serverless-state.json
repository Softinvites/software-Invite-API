{
  "service": {
    "service": "softinvites-backend",
    "serviceObject": {
      "name": "softinvites-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "us-east-2",
      "apiGateway": {
        "binaryMediaTypes": [
          "image/png",
          "image/jpeg",
          "application/octet-stream"
        ]
      },
      "stage": "dev",
      "architecture": "arm64",
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "https://www.softinvite.com",
            "https://softinvite.com",
            "https://softinvite-scan.vercel.app",
            "http://localhost:3039"
          ],
          "allowCredentials": true,
          "allowedHeaders": [
            "Content-Type",
            "Authorization",
            "X-Amz-Date",
            "X-Api-Key"
          ],
          "allowedMethods": [
            "OPTIONS",
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "maxAge": 86400
        }
      },
      "environment": {
        "MONGODB_URI": "mongodb+srv://softinvites:Pi1pZr1yjuIcJ5pL@cluster1.f69gx.mongodb.net/softinvites?retryWrites=true&w=majority",
        "JWT_SECRET": "soft_invites363effbch7ee",
        "S3_BUCKET": "softinvites-assets",
        "REGION": "us-east-2",
        "CDN_URL": "https://softinvites-assets.s3.amazonaws.com",
        "QR_LAMBDA_FUNCTION_NAME": "generateQrToS3",
        "IMPORT_LAMBDA_FUNCTION_NAME": "importGuestsLambda",
        "ZIP_LAMBDA_FUNCTION_NAME": "downloadZipLambdaFunction",
        "FRONTEND_URL": "https://www.softinvite.com",
        "BACKUP_BUCKET": "softinvites-backups",
        "BACKUP_LAMBDA": "softinvites-backend-dev-backup",
        "EMAIL_FROM": "info@softinvite.com",
        "SERVERLESS_LICENSE_KEY": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdJZCI6IjdmYjQ0ZmY4LTQ5YmUtNGY0My1iMmM2LTliMzIyYmU5ZmQ3OSIsImlhdCI6MTc1NjM3MjU3NCwiZXhwIjoxNzg3OTA4NTc0LCJpc3MiOiJhcHAuc2VydmVybGVzcy5jb20ifQ.wxYOYIhN7zKm1zUY3l0RaHDnGOWKBqjdt9aPzjaiWZrMqhOxRWr8AD7Oy_-KQ-JnBu4ow1rKFqgFWc62EYwMY5XZvtCM91U-3lixSNMtqCyMhokEusEVM3IApNdQcl2fBS65RHGg1DVdWIVMGBBURMTDyy1DP0fhcINigjr08zP6iNeyjypdNp_az1TfDPZHVpAItKsIhk0sp0I9TBC_GPObgQ8gH9BK2guDNsEP92XJLoQaDCRXwlVemX3QjT3H6lEJBJjrzzAkOiDaGBd0TEHcpwbORdWKpZB9IRjmD0B6RVXU4W2azSGx8HEG3wHimraoUYXSG9Y9VOKEcpHq2w"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*",
                "lambda:InvokeFunction"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/softinvites-backend-dev-app"
            }
          },
          "BackupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/softinvites-backend-dev-backup"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "softinvites-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/softinvites-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/softinvites-backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "softinvites-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/softinvites-backend/dev/1757000865840-2025-09-04T15:47:45.840Z/app.zip"
              },
              "Handler": "dist/index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "softinvites-backend-dev-app",
              "MemorySize": 1024,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "MONGODB_URI": "mongodb+srv://softinvites:Pi1pZr1yjuIcJ5pL@cluster1.f69gx.mongodb.net/softinvites?retryWrites=true&w=majority",
                  "JWT_SECRET": "soft_invites363effbch7ee",
                  "S3_BUCKET": "softinvites-assets",
                  "REGION": "us-east-2",
                  "CDN_URL": "https://softinvites-assets.s3.amazonaws.com",
                  "QR_LAMBDA_FUNCTION_NAME": "generateQrToS3",
                  "IMPORT_LAMBDA_FUNCTION_NAME": "importGuestsLambda",
                  "ZIP_LAMBDA_FUNCTION_NAME": "downloadZipLambdaFunction",
                  "FRONTEND_URL": "https://www.softinvite.com",
                  "BACKUP_BUCKET": "softinvites-backups",
                  "BACKUP_LAMBDA": "softinvites-backend-dev-backup",
                  "EMAIL_FROM": "info@softinvite.com",
                  "SERVERLESS_LICENSE_KEY": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdJZCI6IjdmYjQ0ZmY4LTQ5YmUtNGY0My1iMmM2LTliMzIyYmU5ZmQ3OSIsImlhdCI6MTc1NjM3MjU3NCwiZXhwIjoxNzg3OTA4NTc0LCJpc3MiOiJhcHAuc2VydmVybGVzcy5jb20ifQ.wxYOYIhN7zKm1zUY3l0RaHDnGOWKBqjdt9aPzjaiWZrMqhOxRWr8AD7Oy_-KQ-JnBu4ow1rKFqgFWc62EYwMY5XZvtCM91U-3lixSNMtqCyMhokEusEVM3IApNdQcl2fBS65RHGg1DVdWIVMGBBURMTDyy1DP0fhcINigjr08zP6iNeyjypdNp_az1TfDPZHVpAItKsIhk0sp0I9TBC_GPObgQ8gH9BK2guDNsEP92XJLoQaDCRXwlVemX3QjT3H6lEJBJjrzzAkOiDaGBd0TEHcpwbORdWKpZB9IRjmD0B6RVXU4W2azSGx8HEG3wHimraoUYXSG9Y9VOKEcpHq2w"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-2:402961397587:layer:Sharp:1"
              ]
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "BackupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/softinvites-backend/dev/1757000865840-2025-09-04T15:47:45.840Z/backup.zip"
              },
              "Handler": "dist/backup.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "softinvites-backend-dev-backup",
              "MemorySize": 512,
              "Timeout": 120,
              "Architectures": [
                "arm64"
              ],
              "Description": "Event-driven MongoDB backup to S3",
              "Environment": {
                "Variables": {
                  "MONGODB_URI": "mongodb+srv://softinvites:Pi1pZr1yjuIcJ5pL@cluster1.f69gx.mongodb.net/softinvites",
                  "JWT_SECRET": "soft_invites363effbch7ee",
                  "S3_BUCKET": "softinvites-assets",
                  "REGION": "us-east-2",
                  "CDN_URL": "https://softinvites-assets.s3.amazonaws.com",
                  "QR_LAMBDA_FUNCTION_NAME": "generateQrToS3",
                  "IMPORT_LAMBDA_FUNCTION_NAME": "importGuestsLambda",
                  "ZIP_LAMBDA_FUNCTION_NAME": "downloadZipLambdaFunction",
                  "FRONTEND_URL": "https://www.softinvite.com",
                  "BACKUP_BUCKET": "softinvites-backups",
                  "BACKUP_LAMBDA": "softinvites-backend-dev-backup",
                  "EMAIL_FROM": "info@softinvite.com",
                  "SERVERLESS_LICENSE_KEY": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdJZCI6IjdmYjQ0ZmY4LTQ5YmUtNGY0My1iMmM2LTliMzIyYmU5ZmQ3OSIsImlhdCI6MTc1NjM3MjU3NCwiZXhwIjoxNzg3OTA4NTc0LCJpc3MiOiJhcHAuc2VydmVybGVzcy5jb20ifQ.wxYOYIhN7zKm1zUY3l0RaHDnGOWKBqjdt9aPzjaiWZrMqhOxRWr8AD7Oy_-KQ-JnBu4ow1rKFqgFWc62EYwMY5XZvtCM91U-3lixSNMtqCyMhokEusEVM3IApNdQcl2fBS65RHGg1DVdWIVMGBBURMTDyy1DP0fhcINigjr08zP6iNeyjypdNp_az1TfDPZHVpAItKsIhk0sp0I9TBC_GPObgQ8gH9BK2guDNsEP92XJLoQaDCRXwlVemX3QjT3H6lEJBJjrzzAkOiDaGBd0TEHcpwbORdWKpZB9IRjmD0B6RVXU4W2azSGx8HEG3wHimraoUYXSG9Y9VOKEcpHq2w"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "BackupLogGroup"
            ]
          },
          "BackupLambdaVersion4q9m16KGQauFyNWjhjlXutthHeMnaTirb3oJCZjU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BackupLambdaFunction"
              },
              "CodeSha256": "KKLedlUfVhm8rIGvvudKSerLWqZjDvLeQ+wej4IWRS4=",
              "Description": "Event-driven MongoDB backup to S3"
            }
          },
          "AppLambdaVersion30RzydBpFZgHpbYXor80YPAW427qNZx83dOemyxgJU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "eZqHKYlKO461Uw//vQeszQsXYbUnBusLJ9gACNBeOiQ="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-softinvites-backend",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowCredentials": true,
                "AllowHeaders": [
                  "Content-Type",
                  "Authorization",
                  "X-Amz-Date",
                  "X-Api-Key"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "AllowOrigins": [
                  "https://www.softinvite.com",
                  "https://softinvite.com",
                  "https://softinvite-scan.vercel.app",
                  "http://localhost:3039"
                ],
                "MaxAge": 86400
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "AppLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApp": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AppLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteAnyProxyVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /{proxy+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApp"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApp"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-softinvites-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "BackupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BackupLambdaVersion4q9m16KGQauFyNWjhjlXutthHeMnaTirb3oJCZjU"
            },
            "Export": {
              "Name": "sls-softinvites-backend-dev-BackupLambdaFunctionQualifiedArn"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersion30RzydBpFZgHpbYXor80YPAW427qNZx83dOemyxgJU"
            },
            "Export": {
              "Name": "sls-softinvites-backend-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-softinvites-backend-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-softinvites-backend-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true
      },
      "dotenv": {
        "path": ".env"
      },
      "serverless-offline": {
        "httpPort": 4000,
        "noPrependStageInUrl": true
      },
      "build": {
        "esbuild": {
          "bundle": true,
          "minify": true,
          "sourcemap": false,
          "target": "node20",
          "platform": "node",
          "concurrency": 10,
          "external": [
            "sharp"
          ]
        }
      }
    },
    "plugins": [
      "serverless-plugin-dotenv",
      "serverless-offline",
      "serverless-esbuild"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "dist/index.handler",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AppLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "httpApi": {
              "method": "ANY",
              "path": "/{proxy+}"
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/{proxy+}"
          }
        ],
        "memorySize": 1024,
        "timeout": 30,
        "name": "softinvites-backend-dev-app",
        "package": {
          "artifact": ".serverless\\app.zip"
        },
        "memory": 1024,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersion30RzydBpFZgHpbYXor80YPAW427qNZx83dOemyxgJU"
      },
      "backup": {
        "handler": "dist/backup.handler",
        "description": "Event-driven MongoDB backup to S3",
        "memorySize": 512,
        "timeout": 120,
        "environment": {
          "MONGODB_URI": "mongodb+srv://softinvites:Pi1pZr1yjuIcJ5pL@cluster1.f69gx.mongodb.net/softinvites",
          "BACKUP_BUCKET": "softinvites-backups"
        },
        "events": [],
        "name": "softinvites-backend-dev-backup",
        "package": {
          "artifact": ".serverless\\backup.zip"
        },
        "memory": 512,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "BackupLambdaVersion4q9m16KGQauFyNWjhjlXutthHeMnaTirb3oJCZjU"
      }
    },
    "configValidationMode": "error",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "softinvites-backend",
      "configValidationMode": "error",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "patterns": [
          "!node_modules/.cache/**",
          "!node_modules/**/*.md",
          "!node_modules/lodash/fp/**",
          "!.git/**",
          "!.gitignore",
          "!node_modules/sharp/**"
        ],
        "individually": true,
        "artifactsS3KeyDirname": "serverless/softinvites-backend/dev/code-artifacts"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/softinvites-backend/dev/1757000865840-2025-09-04T15:47:45.840Z",
    "artifact": ""
  }
}